<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="edu.kh.cooof.lib.seat.model.mapper.LibSeatMapper">

	<!-- 모든 좌석 불러오기 -->
	<select id="getAllSeats"
		resultType="edu.kh.cooof.lib.seat.model.dto.LibSeatDTO">
		SELECT SEAT_NO, COORDI_X AS coordiX, COORDI_Y AS coordiY,
		CONDITION,
		SEAT_AVAIL
		FROM SEAT
	</select>

	<!-- 좌석 편집 현황 지우기 -->
	<delete id="deleteAllSeats">

		DELETE FROM SEAT

	</delete>

	<!-- 좌석 이용 현황 지우기 -->
	<delete id="deleteRentSeat">

		DELETE FROM RENT_SEAT

	</delete>

	<!-- 좌석 편집 현황 저장하기 -->
	<insert id="insertSeat">

		INSERT INTO SEAT (SEAT_NO, COORDI_X, COORDI_Y, CONDITION)
		VALUES (#{seatNo},
		#{coordiX}, #{coordiY}, #{condition})

	</insert>


	<select id="isMemberUsing" resultType="int">

		SELECT COUNT(*)
		FROM RENT_SEAT
		WHERE MEMBER_NO = #{memberNo}

	</select>

	<!-- 열람실 좌석 이용하기 -->
	<!-- seatNo2 = db 자리 번호 -->
	<insert id="useSeat" parameterType="map">
        <![CDATA[
        BEGIN
            INSERT INTO RENT_SEAT
            (RENT_SEAT_NO, READING_START, READING_DONE, READING_EXTEND, SEAT_NO2, MEMBER_NO)
            VALUES (SEQ_SEAT_NO.NEXTVAL, DEFAULT, SYSDATE + INTERVAL '4' HOUR, DEFAULT, #{seatNo2}, #{memberNo});

            UPDATE SEAT 
            SET SEAT_AVAIL = 1
            WHERE SEAT_NO = #{seatNo2};
        END;
        ]]>
	</insert>


	<!-- 열람실 이용 종료하기 -->
	<select id="getMemberUsingSeat" resultType="int">
        SELECT s.SEAT_NO
        FROM RENT_SEAT rs
        JOIN SEAT s
        ON rs.SEAT_NO2 = s.SEAT_NO
        WHERE rs.MEMBER_NO = #{memberNo} AND s.CONDITION = 1
    </select>

    <update id="clearMemberFromSeat">
        DELETE FROM RENT_SEAT
        WHERE SEAT_NO2 = #{seatNo}
    </update>

    <update id="clearConditionFromSeat">
        UPDATE SEAT
        SET SEAT_AVAIL = 0
        WHERE SEAT_NO = #{seatNo}
    </update>

	<update id="extendSeat">
        UPDATE RENT_SEAT
        SET READING_DONE = READING_DONE + INTERVAL '4' HOUR,
            READING_EXTEND = READING_EXTEND - 1
        WHERE MEMBER_NO = #{memberNo}
          AND READING_EXTEND > 0
    </update>

	<!-- 좌석의 이용 가능 여부 확인하기 -->
	<select id="chckSeatConditon">
		SELECT COUNT(*) FROM SEAT
		WHERE SEAT_NO = #{seatNo}
		AND SEAT_AVAIL != 1
	</select>
	
	<!--현재 다른사람이 이용 중인 열람실을 예약했을 때,
		열람실을 예약한 시간과 종료예정시간이 겹치는지 확인-->
	<select id="checkStartTime">
		SELECT COUNT(*)
        FROM RENT_SEAT 
        WHERE SEAT_NO2 = #{seatNo}
        AND TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD') || ' ' || #{startTime}, 'YYYY-MM-DD HH24:MI') 
        BETWEEN READING_START  AND READING_DONE
	</select>
	
	<!-- 여기서부터 작업하면 돼!!! -->
	 <insert id="seatBo" parameterType="map">
        INSERT INTO SEAT_SPACE_BOOKING (
            BOOKING_SS_NO, START_BOOKING, END_BOOKING, MEMBER_NO, SPACE_NO, SEAT_NO
        ) VALUES (
            SEQ_BOOKING_SS_NO.NEXTVAL, 
            TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD') || ' ' || #{startTime}, 'YYYY-MM-DD HH24:MI'), 
            TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD') || ' ' || #{startTime}, 'YYYY-MM-DD HH24:MI') + INTERVAL '4' HOUR, 
            #{memberNo}, 
            #{spaceNo}, 
            NULL
        )
    </insert>


</mapper>
