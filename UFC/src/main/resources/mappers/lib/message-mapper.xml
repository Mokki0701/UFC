<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN " "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.cooof.message.model.mapper.MessageMapper">

	<select id="getListCount">
		SELECT COUNT(*)
		FROM "MESSAGE"
		WHERE MESSAGE_REV = #{memberNo}
	</select>
	
	<select id="selectMessageList">
		SELECT MESSAGE_NO, MESSAGE_DATE, SEEN_DATE, MESSAGE_TITLE, MESSAGE_STATUS, MESSAGE_SEN, MESSAGE_REV, MEMBER_EMAIL
		FROM "MESSAGE"
		JOIN "MEMBER" ON (MESSAGE_SEN = MEMBER_NO)
		WHERE MESSAGE_REV = #{memberNo}
		  AND MESSAGE_SEN NOT IN (
		    SELECT BLOCK_BEING
		    FROM MESSAGE_BLOCK
		    WHERE BLOCK_DO = #{memberNo}
		  )
		ORDER BY MESSAGE_NO DESC
	</select>
	
	<select id="getRevListCount">
		SELECT COUNT(*)
		FROM "MESSAGE"
		WHERE MESSAGE_SEN = #{memberNo}
	</select>
	
	<select id="selectRevMessageList">
		SELECT MESSAGE_NO, MESSAGE_DATE, SEEN_DATE, MESSAGE_TITLE, MESSAGE_STATUS, MESSAGE_SEN, MESSAGE_REV, MEMBER_EMAIL 
		FROM "MESSAGE"
		JOIN "MEMBER" ON(MESSAGE_REV = MEMBER_NO)
		WHERE MESSAGE_SEN = #{memberNo}
		  AND MESSAGE_REV NOT IN (
		    SELECT BLOCK_BEING
		    FROM MESSAGE_BLOCK
		    WHERE BLOCK_DO = #{memberNo}
		  )
		ORDER BY MESSAGE_NO DESC
	</select>
	
	<delete id="deleteMessage">
		DELETE FROM "MESSAGE"
		WHERE MESSAGE_NO = #{messageNo}
	</delete>
	
	<select id="checkRead">
		SELECT COUNT(*)
		FROM "MESSAGE"
		WHERE MESSAGE_NO = #{messageNo}
		AND MESSAGE_STATUS = 0
	</select>
	
	<update id="updateStatus">
		UPDATE "MESSAGE"
		SET MESSAGE_STATUS = 1,
			SEEN_DATE = SYSDATE
		WHERE MESSAGE_NO = #{messageNo}
		AND MESSAGE_REV = #{memberNo}
	</update>
	
	<select id="detailMessage">
		SELECT MESSAGE_NO, MESSAGE_DATE, SEEN_DATE, MESSAGE_TITLE, MESSAGE_STATUS, MESSAGE_SEN, MESSAGE_REV, MEMBER_EMAIL, MESSAGE_CONTENT
		FROM "MESSAGE"
		JOIN "MEMBER" ON(MESSAGE_SEN = MEMBER_NO)
		WHERE MESSAGE_NO = #{messageNo}
	</select>

	<select id="getRevMemberNo" resultType="_int">
		SELECT MEMBER_NO
		FROM "MEMBER"
		WHERE MEMBER_EMAIL = #{memberEmail}
	</select>
	
	<insert id="sendMessage">
		INSERT INTO MESSAGE (MESSAGE_NO, MESSAGE_DATE, SEEN_DATE, MESSAGE_TITLE, MESSAGE_CONTENT, MESSAGE_STATUS, MESSAGE_SEN, MESSAGE_REV)
		VALUES (SEQ_MESSAGE_NO.NEXTVAL, SYSDATE, SYSDATE, #{messageTitle}, #{messageContent}, DEFAULT, #{messageSen}, #{messageRev})
	</insert>
	
	<select id="getRevMemberEmail">
		SELECT MEMBER_EMAIL
		FROM "MEMBER"
		WHERE MEMBER_LAST_NAME || MEMBER_FIRST_NAME = #{memberName}
	</select>
	
	<insert id="blockMessage">
		INSERT INTO MESSAGE_BLOCK(BLOCK_NO, BLOCK_DO, BLOCK_BEING)
		VALUES(SEQ_BLOCK_NO.NEXTVAL, #{loginMemberNo}, #{memberNo} )
	</insert>
	
	<select id="getBlockMemberNo">
		SELECT MEMBER_NO
		FROM "MEMBER"
		WHERE MEMBER_LAST_NAME || MEMBER_FIRST_NAME = #{memberName}
	</select>
	
	<select id="blockCheck">
		SELECT COUNT(*)
		FROM MESSAGE_BLOCK
		WHERE BLOCK_DO = #{loginMemberNo}
		AND BLOCK_BEING = #{memberNo}
	</select>
	
	<select id="blockMemberList">
		SELECT BLOCK_BEING
		FROM MESSAGE_BLOCK
		WHERE BLOCK_DO = #{memberNo}
	</select>
	
	<select id="getMemberEmail">
		SELECT MEMBER_EMAIL
		FROM "MEMBER"
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<delete id="unblockMember">
		DELETE FROM MESSAGE_BLOCK
		WHERE BLOCK_DO = #{memberNo}
		AND BLOCK_BEING = #{blockedMemberNo}
	</delete>
	
	<select id="getMemberNo">
		SELECT MEMBER_NO
		FROM "MEMBER"
		WHERE MEMBER_EMAIL = #{memberEmail}
	</select>
	
	<select id="getMessageNo">
		SELECT SEQ_MESSAGE_NO.CURRVAL
		FROM DUAL
	</select>
	
	

</mapper>
